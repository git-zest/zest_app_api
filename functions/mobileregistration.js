var mongoose=require('mongoose')
var Schema=mongoose.Schema;
mongoose.Promise=require('bluebird');
var db=mongoose.connection;
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
var mobileregistionsch=new Schema({
  emailid:"String",
});
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
var mobileregobj=mongoose.model('db_mobiledetails',mobileregistionsch)
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
module.exports.mobileregister=function(emailid,callback){
  mongoose.connect('mongodb+srv://zestapp:ammu@cluster0-etvhe.mongodb.net/',{dbName: 'zest_app_mongodb'},function(err){
    if(err){
      console.log(err);
      db.close();
      model="db failed";
      callback(model);
    }
  var documets_mbl=new mobileregobj({"emailid":emailid});
  var mobileregisterdata={"emailid":emailid};
  mobileregobj.findOne(mobileregisterdata).count(function(err,count){
    if(err){
      model="db failed";
      callback(model);
    }
    else{
      if(count===0){
        documets_mbl.save(function(err){
            console.log("saved");
            db.close();
            model="success";
            callback(model);
          });
        }else{
          db.close();
          model="Already added";
          callback(model);
        }}
  });
  });
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
module.exports.updatelist=function(modelname,modelnumber,preferredtime,eventarray,callback){
  mongoose.connect('mongodb+srv://zestapp:ammu@cluster0-etvhe.mongodb.net/',{dbName: 'zest_app_mongodb'},function(err){
    if(err){
      console.log(err);
      db.close();
      model="db failed";
      callback(model);
    }
  });
}
